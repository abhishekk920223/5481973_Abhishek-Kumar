vector<int> icecreamParlor(int m, vector<int> arr) {
    unordered_map<int, int> seen; // cost -> index (1-based)
    vector<int> result(2);

    for (int i = 0; i < arr.size(); i++) {
        int complement = m - arr[i];
        if (seen.find(complement) != seen.end()) {
            result[0] = seen[complement];
            result[1] = i + 1; // 1-based index
            return result;
        }
        seen[arr[i]] = i + 1; // store current index
    }
    return result;
}