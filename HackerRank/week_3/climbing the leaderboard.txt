vector<int> climbingLeaderboard(vector<int> ranked, vector<int> player) {
    // Step 1: remove duplicates
    vector<int> uniqueRanked;
    uniqueRanked.push_back(ranked[0]);
    for (int i = 1; i < ranked.size(); i++) {
        if (ranked[i] != ranked[i-1]) {
            uniqueRanked.push_back(ranked[i]);
        }
    }

    vector<int> result;
    int n = uniqueRanked.size();
    int j = n - 1; // start from the lowest ranked score

    // Step 2: process each player score
    for (int score : player) {
        while (j >= 0 && score >= uniqueRanked[j]) {
            j--; // move up the leaderboard
        }
        result.push_back(j + 2); // rank = j+2 (since j points to next higher score)
    }
    return result;
}
