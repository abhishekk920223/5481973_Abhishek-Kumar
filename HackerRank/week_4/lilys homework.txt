#include <bits/stdc++.h>
using namespace std;

int countSwaps(vector<int> arr, vector<int> target) {
    int n = arr.size();
    unordered_map<int,int> pos;
    
    // store current indices of elements
    for(int i = 0; i < n; i++) {
        pos[arr[i]] = i;
    }

    int swaps = 0;
    for(int i = 0; i < n; i++) {
        if(arr[i] != target[i]) {
            swaps++;

            // index of correct element for position i
            int correctIndex = pos[target[i]];

            // update mapping before swapping
            pos[arr[i]] = correctIndex;
            pos[target[i]] = i;

            // swap in array
            swap(arr[i], arr[correctIndex]);
        }
    }
    return swaps;
}

int lilysHomework(vector<int> arr) {
    vector<int> asc = arr, desc = arr;
    sort(asc.begin(), asc.end());
    sort(desc.begin(), desc.end(), greater<int>());

    int ascSwaps = countSwaps(arr, asc);
    int descSwaps = countSwaps(arr, desc);

    return min(ascSwaps, descSwaps);
}
