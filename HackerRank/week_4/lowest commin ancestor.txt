#include <bits/stdc++.h>
using namespace std;

struct Node {
    int data;
    Node* left;
    Node* right;
    Node(int val) {
        data = val;
        left = right = nullptr;
    }
};

Node* insert(Node* root, int data) {
    if (root == nullptr) return new Node(data);
    if (data <= root->data) root->left = insert(root->left, data);
    else root->right = insert(root->right, data);
    return root;
}

Node* lca(Node* root, int v1, int v2) {
    if (!root) return nullptr;

    if (v1 < root->data && v2 < root->data) {
        return lca(root->left, v1, v2);
    } 
    else if (v1 > root->data && v2 > root->data) {
        return lca(root->right, v1, v2);
    } 
    else {
        return root;
    }
}

int main() {
    int n;
    cin >> n;
    Node* root = nullptr;
    for (int i = 0; i < n; i++) {
        int val;
        cin >> val;
        root = insert(root, val);
    }

    int v1, v2;
    cin >> v1 >> v2;

    Node* ancestor = lca(root, v1, v2);
    cout << ancestor->data << endl;

    return 0;
}
